@model List<Contacts>
@{
    ViewData["Title"] = "Admin Iletisim Liste";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<br />
<title>İletişim Mesajları</title>
<h4 class="card-title">Tüm İletişim Kayıtları</h4>
<hr />
<div class="row mb-2">
    <div class="col text-right">
        <select id="exportOptions" class="form-control form-control-sm w-100 mb-2 d-md-inline-block">
            <option value="">Dışa Aktar</option>
            <option value="excel">📥 Excel</option>
            <option value="pdf">📄 PDF</option>
            <option value="print">🖨️ Yazdır</option>
        </select>
    </div>
</div>
<div class="table-responsive">
    <table id="yourTableId" class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>İsim</th>
                <th>Mail</th>
                <th>Telefon</th>
                <th>Konu</th>
                <th>Mesaj</th>
                <th>Tarih</th>
                <th>IP Adres</th>
                <th>Konum</th>
                <th>Bilgi</th>
                <th class="no-export">Sil</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    string wp = "https://wa.me/90" + item.ContactPhone;
                    <tr>
                        <td>@item.ID</td>
                        <td>@item.ContactName</td>
                        <td><a href="mailto:@item.ContactMail" style="color:blue" target="_blank">@item.ContactMail</a></td>
                        <td><a href="@wp" style="color:blue" target="_blank"><u>@item.ContactPhone</u></a></td>
                        <td>@item.ContactSubject</td>
                        <td style="white-space: pre-wrap; word-break: break-word;">@item.ContactMessage</td>
                        <td>@item.CreateDate.ToString("dd MMMM yyyy HH:mm:ss", new System.Globalization.CultureInfo("tr-TR"))</td>
                        <td>@item.IPAdress</td>
                        <td>@item.UserGeo</td>
                        <td>@item.UserInfo</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-outline-danger btn-sm" onclick="confirmDelete('@item.ID')">
                                <i class="fa fa-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<div id="tempDataMessages"
     data-type="@TempData["Type"]"
     data-message="@TempData["Message"]">
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmDelete(id) {
        Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu iletişim kaydı silinecek!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'İptal'
        }).then((result) => {
            if (result.isConfirmed) {
                sessionStorage.setItem("updated", "1");
                window.location.href = '/AdminIletisim/Sil/' + id;
            }
        });
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const el = document.getElementById('tempDataMessages');
        if (!el) return;
        const type = el.getAttribute('data-type');
        const message = el.getAttribute('data-message');
        const fromUpdate = sessionStorage.getItem("updated");
        if (type && message && type === "success" && fromUpdate === "1") {
            Swal.fire({
                icon: 'success',
                title: 'Başarılı!',
                text: message,
                timer: 3000,
                showConfirmButton: false
            });
            sessionStorage.removeItem("updated");
        }
        if (type && message && type === "error") {
            Swal.fire({
                icon: 'error',
                title: 'Hata!',
                text: message,
                timer: 3000,
                showConfirmButton: false
            });
        }
    });
</script>