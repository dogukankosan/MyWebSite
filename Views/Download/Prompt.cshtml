@model MyWebSite.Models.DownloadPromptVm
@{
    ViewData["Title"] = $"İndirme • {Model.PackageKey} {Model.Version}";
    bool hasFile = !string.IsNullOrWhiteSpace(Model.FileNameStored);
    string archiveIcon = (Model.ArchiveType ?? "").ToLowerInvariant() == "zip" ? "bi-file-zip" : "bi-archive";
    Layout = null;
}
<!doctype html>
<html lang="tr">
<head>
    <link rel="icon" type="image/png" href="@Url.Content("~/css/software-developer.png")" />
    <meta charset="utf-8" />
    <meta name="robots" content="noindex, nofollow, noarchive, nosnippet, noimageindex">
    <meta name="googlebot" content="noindex, nofollow, noarchive, nosnippet, noimageindex">
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous">
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <style>
        body {
            min-height: 100vh;
            background: radial-gradient(1000px 600px at 10% -10%, #eaf1ff, transparent 60%), radial-gradient(800px 500px at 120% 0%, #f7f7fb, transparent 50%), #f6f7fb;
        }
        .page-shell {
            min-height: calc(100vh - 64px);
        }
        .brand-badge {
            font-weight: 600;
            letter-spacing: .3px;
        }
        .card-download {
            border: 0;
            border-radius: 18px;
            box-shadow: 0 8px 32px rgba(0,0,0,.06);
        }
        .chip {
            border-radius: 999px;
            padding: .25rem .6rem;
            background: #eef4ff;
            color: #0d6efd;
            font-weight: 600;
        }
        .muted {
            color: #6c757d;
        }
        .alert i {
            margin-right: .25rem;
        }
        .btn-loading .spinner-border {
            width: 1rem;
            height: 1rem;
            margin-right: .4rem;
        }
        @@media (max-width: 575.98px) {
            .hstack.g-3>*

        {
            margin-right: .5rem !important;
        }
        .hstack.g-3 > *:last-child {
            margin-right: 0 !important;
        }

        }
    </style>
</head>
<body class="d-flex flex-column">
    <nav class="navbar bg-white border-bottom shadow-sm">
        <div class="container">
            <a class="navbar-brand brand-badge" asp-controller="Download" asp-action="Index">
                <i class="bi bi-cloud-arrow-down"></i> Dosya Merkezi
            </a>
            <div class="ms-auto">
                <a class="btn btn-outline-secondary btn-sm" href="~/">
                    <i class="bi bi-house"></i> Siteye Dön
                </a>
            </div>
        </div>
    </nav>
    <main class="page-shell d-flex align-items-center">
        <div class="container my-4">
            <div class="row justify-content-center">
                <div class="col-12 col-md-8 col-lg-6">
                    <div id="dlSuccess" class="alert alert-success d-none" role="alert" aria-live="assertive">
                        <i class="bi bi-check-circle"></i>
                        İndirme başlatıldı. Tarayıcınız dosyayı indiriyor olmalı.
                    </div>
                    <div id="dlError" class="alert alert-danger d-none" role="alert" aria-live="assertive">
                        <i class="bi bi-x-circle"></i>
                        Parola hatalı veya indirme başlatılamadı.
                    </div>
                    <div class="card card-download">
                        <div class="card-body p-4 p-md-5">
                            <div class="d-flex align-items-start justify-content-between flex-wrap">
                                <div class="mb-3">
                                    <div class="h5 mb-1">
                                        Paket: <span class="chip">@Model.PackageKey</span>
                                    </div>
                                    <div class="hstack gap-3 muted small">
                                        <div>Versiyon: <span class="badge bg-dark">@Model.Version</span></div>
                                        <div class="text-uppercase">
                                            <i class="bi @archiveIcon"></i>
                                            @Model.ArchiveType
                                        </div>
                                        @if (hasFile)
                                        {
                                            <div class="text-truncate" title="@Model.FileNameStored">
                                                <i class="bi bi-file-earmark-text"></i> @Model.FileNameStored
                                            </div>
                                        }
                                    </div>
                                </div>            
                            </div>
                            <iframe name="dlFrame" id="dlFrame" style="display:none;"></iframe>
                            <form asp-action="DownloadKv"
                                  asp-route-packageKey="@Model.PackageKey"
                                  asp-route-version="@Model.Version"
                                  method="post"
                                  class="needs-validation mt-3"
                                  novalidate
                                  target="dlFrame">
                                @Html.AntiForgeryToken()
                                @if (hasFile)
                                {
                                    <input type="hidden" name="fileName" value="@Model.FileNameStored" />
                                }
                                <input type="hidden" name="dlToken" id="dlToken" />
                                <div class="mb-3">
                                    <label for="password" class="form-label">İndirme Şifresi</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-shield-lock"></i></span>
                                        <input type="password" class="form-control" id="password" name="password"
                                               placeholder="Şifreyi giriniz"
                                               required autocomplete="current-password" autofocus />
                                        <button type="button" class="btn btn-outline-secondary" id="togglePwd" tabindex="-1">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <div class="invalid-feedback">Şifre zorunludur.</div>
                                    </div>
                                </div>
                                <div class="d-grid d-sm-flex gap-2">
                                    <button id="btnDownload" type="submit" class="btn btn-primary px-4">
                                        <span class="spinner-border spinner-border-sm me-2 d-none" role="status" aria-hidden="true"></span>
                                        İndir
                                    </button>
                                    <a class="btn btn-outline-secondary" asp-action="Index">
                                        Listeye Dön
                                    </a>
                                </div>
                                <div class="form-text mt-3 muted">
                                    <i class="bi bi-info-circle"></i>
                                    Yanlış parola denemeleri log’lanır. Tarayıcı indirmeleri engelliyorsa “pop-up/indirme” izinlerini kontrol edin.
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="text-center mt-3 muted small">
                        © @DateTime.Now.Year • İndirme Modülü
                    </div>

                </div>
            </div>
        </div>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <script>
        (() => {
          'use strict';
          const form   = document.querySelector('form.needs-validation');
          const tokenI = document.getElementById('dlToken');
          const okBox  = document.getElementById('dlSuccess');
          const errBox = document.getElementById('dlError');
          const btn    = document.getElementById('btnDownload');
          const spin   = btn?.querySelector('.spinner-border');
          function genToken(){
            return (Math.random().toString(36).slice(2) + Date.now().toString(36));
          }
          function getCookie(name){
            const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[$()*+./?[\\\]^{|}-]/g, '\\$&') + '=([^;]*)'));
            return m ? decodeURIComponent(m[1]) : undefined;
          }
          function clearCookie(name){ document.cookie = name + '=; Max-Age=0; path=/'; }
          let pollTimer = null;
          form.addEventListener('submit', (e) => {
            if (!form.checkValidity()) {
              e.preventDefault(); e.stopPropagation();
            } else {
              btn?.setAttribute('disabled', 'disabled');
              btn?.classList.add('btn-loading');
              spin?.classList.remove('d-none');
              okBox?.classList.add('d-none');
              errBox?.classList.add('d-none');
              const tk = genToken();
              tokenI.value = tk;
              if (pollTimer) clearInterval(pollTimer);
              pollTimer = setInterval(() => {
                const name = 'dl_' + tk;
                const v = getCookie(name);
                if (v) {
                  clearInterval(pollTimer);
                  clearCookie(name);
                  btn?.removeAttribute('disabled');
                  btn?.classList.remove('btn-loading');
                  spin?.classList.add('d-none');
                  if (v === 'ok') {
                    okBox?.classList.remove('d-none');
                  } else {
                    errBox?.classList.remove('d-none');
                    const pwd = document.getElementById('password');
                    pwd?.focus();
                    pwd?.select?.();
                  }
                }
              }, 400);
            }
            form.classList.add('was-validated');
          }, false);
          const pwd = document.getElementById('password');
          const btnToggle = document.getElementById('togglePwd');
          btnToggle?.addEventListener('click', () => {
            const isPwd = pwd.getAttribute('type') === 'password';
            pwd.setAttribute('type', isPwd ? 'text' : 'password');
            btnToggle.innerHTML = isPwd ? '<i class="bi bi-eye-slash"></i>' : '<i class="bi bi-eye"></i>';
            pwd.focus();
          });
        })();
    </script>
</body>
</html>