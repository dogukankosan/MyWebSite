@model IEnumerable<MyWebSite.Models.FileListItem>
@{
    ViewData["Title"] = "Dosya Listesi";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<style>
    .actions-row {
        display: flex;
        align-items: center;
        gap: .5rem;
        flex-wrap: wrap;
    }
    td.no-export {
        vertical-align: middle;
    }
</style>
<br />
<h4 class="card-title">Dosya Listesi</h4>
<hr />
<div class="row mb-2">
    <div class="col text-right">
        <select id="exportOptions" class="form-control form-control-sm w-100 mb-2 d-md-inline-block">
            <option value="">Dışa Aktar</option>
            <option value="excel">📥 Excel</option>
            <option value="pdf">📄 PDF</option>
            <option value="print">🖨️ Yazdır</option>
        </select>
    </div>
</div>
<div class="table-responsive">
    <table class="table table-hover table-striped table-bordered align-middle" id="yourTableId">
        <thead>
            <tr>
                <th>#</th>
                <th>Paket</th>
                <th>Versiyon</th>
                <th>Arşiv</th>
                <th>Dosya</th>
                <th>Boyut</th>
                <th>SHA256</th>
                <th>Yüklendi</th>
                <th>Mod</th>
                <th>İndirme Sayısı</th>
                <th class="no-export">İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @if (Model == null || !Model.Any())
            {
                <tr><td colspan="11" class="text-center text-muted py-4">Kayıt bulunamadı.</td></tr>
            }
            else
            {
                int row = 0;
                foreach (FileListItem i in Model)
                {
                    row++;
                    string? at = (i.ArchiveType ?? "").ToLowerInvariant();
                    bool willBeActive = !i.IsActive;
                    string? linkAbs = Url.Action(
                    "PromptKv", "Download",
                    new { packageKey = i.PackageKey, version = i.Version, fileName = i.FileNameStored },
                    Context.Request.Scheme,
                    Context.Request.Host.ToString()
                    );
                    <tr>
                        <td>@row</td>
                        <td>@i.PackageKey</td>
                        <td><span class="badge text-bg-secondary">@i.Version</span></td>
                        <td>
                            @if (at == "zip")
                            {
                                <span class="badge text-bg-primary">ZIP</span>
                            }
                            else if (at == "rar")
                            {
                                <span class="badge text-bg-dark">RAR</span>
                            }
                            else
                            {
                                <span class="badge text-bg-warning">?</span>
                            }
                        </td>
                        <td class="text-truncate" style="max-width:260px" title="@i.FileNameStored">@i.FileNameStored</td>
                        <td>@((i.FileSizeBytes / 1024d / 1024d).ToString("0.##")) MB</td>
                        <td class="small text-monospace text-truncate" style="max-width:240px" title="@i.Sha256">@i.Sha256</td>
                        <td>@i.UploadUtc.ToString("dd.MM.yyyy HH:mm:ss")</td>
                        <td>@i.LastModifiedUtc.ToString("dd.MM.yyyy HH:mm:ss")</td>
                        <td><span class="badge text-bg-info">@i.DownloadCount</span></td>
                        <td class="no-export">
                            <div class="actions-row">
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="Ham" asp-controller="AdminDosya" asp-route-id="@i.Id"
                                       class="btn btn-success" title="Doğrudan indir (şifresiz)">
                                        <i class="bi bi-download"></i> İndir
                                    </a>
                                    <form asp-action="Sil" asp-controller="AdminDosya" asp-route-id="@i.Id"
                                          method="post" class="d-inline delete-form mb-0">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-danger" title="Sil">
                                            <i class="bi bi-trash"></i> Sil
                                        </button>
                                    </form>
                                </div>
                                <button type="button"
                                        class="btn btn-outline-secondary"
                                        title="Public indirme bağlantısını kopyala"
                                        data-link="@linkAbs"
                                        onclick="copyLink(this)">
                                    <i class="bi bi-link-45deg"></i>
                                </button>
                                <form asp-action="Durum" asp-controller="AdminDosya" method="post" class="d-inline mb-0">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@i.Id" />

                                    <button type="submit"
                                            class="btn btn-sm @(i.IsActive ? "btn-outline-danger" : "btn-outline-success")"
                                            title="@(i.IsActive ? "Pasifleştir" : "Aktifleştir")">
                                        <i class="bi @(i.IsActive ? "bi-toggle-off" : "bi-toggle-on")"></i>
                                        @(i.IsActive ? "Pasifleştir" : "Aktifleştir")
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <a asp-action="IndirmeLog" asp-controller="AdminDosya" class="btn btn-outline-primary ms-auto">
        <i class="bi bi-graph-down-arrow"></i> Tüm İndirmeler Log
    </a>
</div>
<div class="mt-3 d-flex">
    <a asp-action="Yukle" asp-controller="AdminDosya" class="btn btn-primary ms-auto">
        <i class="bi bi-cloud-upload"></i> Yükle
    </a>
</div>
<br />
<br />
<br />
<div id="tempDataMessages"
     data-type="@TempData["Type"]"
     data-message="@TempData["Message"]">
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
<script>
    function copyLink(btn) {
      const link = btn.getAttribute('data-link');
      if (!link) return;
      const showCopied = () => {
        if (window.Swal) {
          Swal.fire({
            toast: true, position: 'top-end',
            icon: 'success', title: 'Bağlantı kopyalandı',
            showConfirmButton: false, timer: 1400, timerProgressBar: true
          });
        }
        const original = btn.innerHTML;
        btn.innerHTML = '<i class="bi bi-check2"></i>';
        btn.classList.remove('btn-outline-secondary');
        btn.classList.add('btn-success');
        setTimeout(() => {
          btn.innerHTML = '<i class="bi bi-link-45deg"></i>';
          btn.classList.remove('btn-success');
          btn.classList.add('btn-outline-secondary');
        }, 1200);
      };
      const showError = () => {
        if (window.Swal) {
          Swal.fire({
            toast: true, position: 'top-end',
            icon: 'error', title: 'Kopyalanamadı',
            showConfirmButton: false, timer: 1500, timerProgressBar: true
          });
        } else {
          alert('Link kopyalanamadı.');
        }
      };
      if (navigator.clipboard && window.isSecureContext) {
        navigator.clipboard.writeText(link).then(showCopied).catch(showError);
      } else {
        const ta = document.createElement('textarea');
        ta.value = link; document.body.appendChild(ta);
        ta.select(); ta.setSelectionRange(0, 99999);
        try { document.execCommand('copy'); showCopied(); }
        catch (e) { showError(); }
        finally { document.body.removeChild(ta); }
      }
    }
    document.addEventListener('DOMContentLoaded', function () {
      const el = document.getElementById('tempDataMessages');
      if (el) {
        const type = el.getAttribute('data-type');
        const message = el.getAttribute('data-message');
        if (type && message) {
          Swal.fire({
            icon: type === "success" ? "success" : "error",
            title: type === "success" ? "Başarılı!" : "Hata!",
            text: message,
            timer: 3000,
            showConfirmButton: false
          });
        }
      }
      document.querySelectorAll('.delete-form').forEach(form => {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          Swal.fire({
            title: 'Emin misiniz?',
            text: "Bu dosya kalıcı olarak silinecek!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'Vazgeç'
          }).then((result) => { if (result.isConfirmed) form.submit(); });
        });
      });
    });
</script>